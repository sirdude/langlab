inherit "/std/object";

int tests, success;

int add_test() {
	tests = tests + 1;
}

int add_success() {
	success = success + 1;
}

int total_tests() {
	return tests;
}

int total_success() {
	return success;
}

int is(string text, mixed return_value, string function,
	varargs mixed args ...) {
	mixed value;
	string argsstring;

	if (!function_object(function, this_object())) {
		write("Unable to find function: " + function + "\n");
		return 0;
	}
	value = call_other(this_object(), function, args...);

	add_test();

	if (value == return_value) {
		add_success();
		write("ok " + total_tests() + " - " + text + "\n");
	} else {

		write("notok " + total_tests() + " - " + text + "\n");
		/* XXX argsstr = ???
		write("Called: function(" + argsstr + ") Expected: " +
			return_value + "\n");
		*/
		write("\tgot: " + value + "\n");
	}
}

void init_tests() {
	tests = 0;
	success = 0;
}

void test_summary() {
	write("Total tests: " + total_tests() + " :Success: " +
		total_success() + "\n");
}

#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;
use Data::Dumper;

my (%Options);

my (@tokens, @ast);

sub usage {
	print "Usage: $0 INFILE.chr\n";

	print "Reads in a dump of our character tree and outputs various " .
		"stats.\n";

	return 1;
}

sub make_node {
	my ($value, $type, $infile, $line, $pos) = @_;
	my $node;

	$node->{'value'} = $value;
	$node->{'type'} = $type;
	$node->{'file'} = $infile;
	$node->{'line'} = $line;
	$node->{'pos'} = $pos;

	return $node;
}

sub read_input {
	my ($infile) = @_;

	if (!-f $infile) {
		print "Unable to open $infile for reading.\n";
		return 0;
	}

	@tokens = eval($infile);

	if (!@tokens) {
		print "Error readking in $infile\n";
		return 0;
	}

	return 1;
}

sub write_input {
	my ($outfile) = @_;
	my ($fh);

	if (!open($fh, ">", $outfile)) {
		print "Unable to open $outfile for writing\n";
		return 0;
	}

	print $fh Dumper(@tokens);

	close($fh);
	return 1;
}

sub write_next_input {
	my ($outfile) = @_;
	my ($fh);

	if (!open($fh, ">", $outfile)) {
		print "Unable to open $outfile for writing\n";
		return 0;
	}

	print $fh Dumper(@ast);

	close($fh);
	return 1;
}

sub get_new_name {
	my ($infile) = @_;
	my $ri = rindex($infile,'.');

	if ($ri > 1) {
		my $newname = substr($infile,0,$ri) . "_new.ast";
		return $newname;
	}

	return "";
}

sub get_next_name {
	my ($infile) = @_;

	my $ri = rindex($infile,'.');

	if ($ri > 1) {
		my $newname = substr($infile,0,$ri) . ".stats";
		return $newname;
	}

	return "";
}

sub gen_stats {
	my @values = @_;
}

GetOptions(\%Options, "debug", "help");

my ($infile) = @ARGV;
if (!$infile || $Options{'help'}) {
	usage();
	exit(1);
}

if (!read_input($infile)) {
	exit(1);
}

gen_stats(@tokens);

my $newfile = get_new_name($infile);
if (!write_input($newfile)) {
	exit(1);
}

$newfile = get_next_name($infile);
if (!write_next_input($newfile)){
	exit(1);
}
